using System;
using System.Collections.Generic;

class Solution
{
    public static void Swap(int[] arr, int i, int j)
    {
      var temp = arr[i];
      arr[i] = arr[j];
      arr[j] = temp;
    }
  
    public static int GetDifferentNumber(int[] arr) 
    {
      for(var i = 0; i < arr.Length; i++) {
        while(arr[i] != i && arr[i] != -1)
        {
          if(arr[i] < arr.Length)
          {
            Swap(arr, i, arr[i]);
          }
          else {
            arr[i] = -1;
          }
        }
      }
      
      var result = arr.Length;
      for(var i = 0; i < arr.Length; i++) {        
        if(arr[i] != i)
        {
          result = i;
          break;
        }
      }
      return result;
    }      
  
    /*public static int GetDifferentNumber(int[] arr) 
    {
      HashSet<int> hs = new HashSet<int>();
      for(int i = 0; i < arr.Length; i ++) {
        hs.Add(arr[i]); 
      }
      
      for(int i = 0; i <= int.MaxValue; i++) {
         if(!hs.Contains(i)) {            
            return i;
        }
      }
      
      return -1;  // not found
    }
*/
    static void Main(string[] args)
    {
      //var arr = new int[] {3, 4, 6, 7 ,8};
      //Console.WriteLine(GetDifferentNumber(arr)); // 1
      
     // var arr2 = new int[] {3, 4, 6, 7 ,8};
      //Console.WriteLine(GetDifferentNumberOptimal(arr2)); // 8
    }
}

// [3, 2 ,4 ,6]
//    0  1  2  3